////////////////////////////////////////////////////////////////////////////////////////////////////
/// \file	Z:\Documents\PBJgame\src\pbj\net\net_address.cpp
/// \author Peter Bartosch
/// \date	2013-08-05
/// \brief	Implements the net::Address class.
////////////////////////////////////////////////////////////////////////////////////////////////////

#ifndef NET_ADDRESS_H_
#include "pbj/net/net_address.h"
#endif

using namespace pbj;
using namespace pbj::net;

////////////////////////////////////////////////////////////////////////////////////////////////////
/// \fn	Address::Address()
///
/// \brief	Default constructor.
///
/// \author	Peter Bartosch
/// \date	2013-08-05
////////////////////////////////////////////////////////////////////////////////////////////////////

Address::Address()
{
	_address = 0;
	_port = 0;
}

////////////////////////////////////////////////////////////////////////////////////////////////////
/// \fn	Address::Address(U8 a, U8 b, U8 c, U8 d, U16 port)
///
/// \brief	Constructor.
///
/// \author	Peter Bartosch
/// \date	2013-08-05
///
/// \param	a   	The A byte of the IPv4 address.
/// \param	b   	The B byte of the IPv4 address.
/// \param	c   	The C byte of the IPv4 address.
/// \param	d   	The D byte of the IPv4 address.
/// \param	port	The port.
/// \details This constructor takes each individual byte of the IP address (A.B.C.D) as well as the
/// 		 port.
////////////////////////////////////////////////////////////////////////////////////////////////////

Address::Address(U8 a, U8 b, U8 c, U8 d, U16 port)
{
	_address = (a<<24) | (b<<16) | (c<<8) | d;
	_port = port;
}

////////////////////////////////////////////////////////////////////////////////////////////////////
/// \fn	Address::Address(U32 address, U16 port)
///
/// \brief	Constructor.
///
/// \author	Peter Bartosch
/// \date	2013-08-05
///
/// \param	address	The IPv4 address as an unsigned 4-byte integer.
/// \param	port   	The port.
////////////////////////////////////////////////////////////////////////////////////////////////////

Address::Address(U32 address, U16 port)
{
	_address = address;
	_port = port;
}

////////////////////////////////////////////////////////////////////////////////////////////////////
/// \fn	pbj::U32 Address::getAddress() const
///
/// \brief	Gets the address.
///
/// \author	Peter Bartosch
/// \date	2013-08-05
///
/// \return	The address as an unsigned 4-byte integer.
////////////////////////////////////////////////////////////////////////////////////////////////////

pbj::U32 Address::getAddress() const
{
	return _address;
}

////////////////////////////////////////////////////////////////////////////////////////////////////
/// \fn	pbj::U8 Address::getA() const
///
/// \brief	Gets A.
///
/// \author	Peter Bartosch
/// \date	2013-08-05
///
/// \return	The first (left-most) byte of the address.
////////////////////////////////////////////////////////////////////////////////////////////////////

pbj::U8 Address::getA() const
{
	return (U8)(_address >> 24);
}

////////////////////////////////////////////////////////////////////////////////////////////////////
/// \fn	pbj::U8 Address::getB() const
///
/// \brief	Gets B.
///
/// \author	Peter Bartosch
/// \date	2013-08-05
///
/// \return	The second (from left) byte of the address.
////////////////////////////////////////////////////////////////////////////////////////////////////

pbj::U8 Address::getB() const
{
	return (U8)(_address >> 16);
}

////////////////////////////////////////////////////////////////////////////////////////////////////
/// \fn	pbj::U8 Address::getC() const
///
/// \brief	Gets C.
///
/// \author	Peter Bartosch
/// \date	2013-08-05
///
/// \return	The thrid (from left) byte of the address.
////////////////////////////////////////////////////////////////////////////////////////////////////

pbj::U8 Address::getC() const
{
	return (U8)(_address >> 8);
}

////////////////////////////////////////////////////////////////////////////////////////////////////
/// \fn	pbj::U8 Address::getD() const
///
/// \brief	Gets D.
///
/// \author	Peter Bartosch
/// \date	2013-08-05
///
/// \return	The last (right-most) byte of the address.
////////////////////////////////////////////////////////////////////////////////////////////////////

pbj::U8 Address::getD() const
{
	return (U8)(_address);
}

////////////////////////////////////////////////////////////////////////////////////////////////////
/// \fn	pbj::U16 Address::getPort() const
///
/// \brief	Gets the port.
///
/// \author	Peter Bartosch
/// \date	2013-08-05
///
/// \return	The port of the address.
////////////////////////////////////////////////////////////////////////////////////////////////////

pbj::U16 Address::getPort() const
{ 
	return _port;
}